extend type Query {
    "Аутентификация пользователя и генерация токена"
    authLogin(login: String!, password: String!, domain_id: Int, remember: Boolean = false): User @field(resolver: "AuthController@login")

    "Проверка на доступность логина для добавления"
    authCheckLogin(login: String!): Boolean @field(resolver: "AuthController@checkLogin")

    "Проверка токена"
    authCheckToken: Boolean @field(resolver: "AuthController@checkToken")
}

extend type Query @guard {
    "Обновление текущего токена пользователя"
    authRefreshToken: String @field(resolver: "AuthController@refreshToken")

    "Удаление текущего токена пользователя"
    authLogout: User @field(resolver: "AuthController@logout")

    "Получить данные авторизированного пользователя"
    me: User @auth
}
